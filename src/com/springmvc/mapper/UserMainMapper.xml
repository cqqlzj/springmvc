<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.mapper.UserMainMapper" >
  <resultMap id="BaseResultMap" type="com.springmvc.model.UserMain" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 06 15:58:15 CST 2016.
    -->
    <id column="userId" property="userId" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="nickName" property="nickName" jdbcType="VARCHAR" />
    <result column="realName" property="realName" jdbcType="VARCHAR" />
    <result column="idCardNo" property="idCardNo" jdbcType="VARCHAR" />
    <result column="passwd" property="passwd" jdbcType="VARCHAR" />
    <result column="payPassword" property="payPassword" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="registerTime" property="registerTime" jdbcType="TIMESTAMP" />
    <result column="roles" property="roles" jdbcType="SMALLINT" />
    <result column="cash" property="cash" jdbcType="DECIMAL" />
    <result column="frozenWithDrawCash" property="frozenWithDrawCash" jdbcType="DECIMAL" />
    <result column="frozenBiddingCash" property="frozenBiddingCash" jdbcType="DECIMAL" />
    <result column="idVerifyLimit" property="idVerifyLimit" jdbcType="SMALLINT" />
    <result column="portrait" property="portrait" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="SMALLINT" />
    <result column="forbidStatus" property="forbidStatus" jdbcType="SMALLINT" />
    <result column="albumCapacity" property="albumCapacity" jdbcType="SMALLINT" />
    <result column="securityLevel" property="securityLevel" jdbcType="SMALLINT" />
    <result column="weiboUId" property="weiboUId" jdbcType="VARCHAR" />
    <result column="weiboAccessToken" property="weiboAccessToken" jdbcType="VARCHAR" />
    <result column="qqUId" property="qqUId" jdbcType="VARCHAR" />
    <result column="qqAccessToken" property="qqAccessToken" jdbcType="VARCHAR" />
    <result column="origin" property="origin" jdbcType="SMALLINT" />
    <result column="staffId" property="staffId" jdbcType="INTEGER" />
    <result column="userCode" property="userCode" jdbcType="VARCHAR" />
    <result column="referee" property="referee" jdbcType="VARCHAR" />
    <result column="usrId" property="usrId" jdbcType="VARCHAR" />
    <result column="sourceFlag" property="sourceFlag" jdbcType="VARCHAR" />
    <result column="inviterUserCode" property="inviterUserCode" jdbcType="VARCHAR" />
    <result column="DifferentIndustryId" property="differentIndustryId" jdbcType="INTEGER" />
    <result column="updateFlag" property="updateFlag" jdbcType="SMALLINT" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 06 15:58:15 CST 2016.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 06 15:58:15 CST 2016.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 06 15:58:15 CST 2016.
    -->
    userId, email, nickName, realName, idCardNo, passwd, payPassword, mobile, city, registerTime, 
    roles, cash, frozenWithDrawCash, frozenBiddingCash, idVerifyLimit, portrait, status, 
    forbidStatus, albumCapacity, securityLevel, weiboUId, weiboAccessToken, qqUId, qqAccessToken, 
    origin, staffId, userCode, referee, usrId, sourceFlag, inviterUserCode, DifferentIndustryId, 
    updateFlag, openid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.springmvc.model.UserMainExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 06 15:58:15 CST 2016.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_main
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultType="java.util.HashMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 06 15:58:15 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_main
    where userId = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 06 15:58:15 CST 2016.
    -->
    delete from user_main
    where userId = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.springmvc.model.UserMainExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 06 15:58:15 CST 2016.
    -->
    delete from user_main
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springmvc.model.UserMain" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 06 15:58:15 CST 2016.
    -->
    insert into user_main (userId, email, nickName, 
      realName, idCardNo, passwd, 
      payPassword, mobile, city, 
      registerTime, roles, cash, 
      frozenWithDrawCash, frozenBiddingCash, 
      idVerifyLimit, portrait, status, 
      forbidStatus, albumCapacity, securityLevel, 
      weiboUId, weiboAccessToken, qqUId, 
      qqAccessToken, origin, staffId, 
      userCode, referee, usrId, 
      sourceFlag, inviterUserCode, DifferentIndustryId, 
      updateFlag, openid)
    values (#{userId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{idCardNo,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, 
      #{payPassword,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{registerTime,jdbcType=TIMESTAMP}, #{roles,jdbcType=SMALLINT}, #{cash,jdbcType=DECIMAL}, 
      #{frozenWithDrawCash,jdbcType=DECIMAL}, #{frozenBiddingCash,jdbcType=DECIMAL}, 
      #{idVerifyLimit,jdbcType=SMALLINT}, #{portrait,jdbcType=INTEGER}, #{status,jdbcType=SMALLINT}, 
      #{forbidStatus,jdbcType=SMALLINT}, #{albumCapacity,jdbcType=SMALLINT}, #{securityLevel,jdbcType=SMALLINT}, 
      #{weiboUId,jdbcType=VARCHAR}, #{weiboAccessToken,jdbcType=VARCHAR}, #{qqUId,jdbcType=VARCHAR}, 
      #{qqAccessToken,jdbcType=VARCHAR}, #{origin,jdbcType=SMALLINT}, #{staffId,jdbcType=INTEGER}, 
      #{userCode,jdbcType=VARCHAR}, #{referee,jdbcType=VARCHAR}, #{usrId,jdbcType=VARCHAR}, 
      #{sourceFlag,jdbcType=VARCHAR}, #{inviterUserCode,jdbcType=VARCHAR}, #{differentIndustryId,jdbcType=INTEGER}, 
      #{updateFlag,jdbcType=SMALLINT}, #{openid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.springmvc.model.UserMain" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 06 15:58:15 CST 2016.
    -->
    insert into user_main
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        userId,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="nickName != null" >
        nickName,
      </if>
      <if test="realName != null" >
        realName,
      </if>
      <if test="idCardNo != null" >
        idCardNo,
      </if>
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="payPassword != null" >
        payPassword,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="registerTime != null" >
        registerTime,
      </if>
      <if test="roles != null" >
        roles,
      </if>
      <if test="cash != null" >
        cash,
      </if>
      <if test="frozenWithDrawCash != null" >
        frozenWithDrawCash,
      </if>
      <if test="frozenBiddingCash != null" >
        frozenBiddingCash,
      </if>
      <if test="idVerifyLimit != null" >
        idVerifyLimit,
      </if>
      <if test="portrait != null" >
        portrait,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="forbidStatus != null" >
        forbidStatus,
      </if>
      <if test="albumCapacity != null" >
        albumCapacity,
      </if>
      <if test="securityLevel != null" >
        securityLevel,
      </if>
      <if test="weiboUId != null" >
        weiboUId,
      </if>
      <if test="weiboAccessToken != null" >
        weiboAccessToken,
      </if>
      <if test="qqUId != null" >
        qqUId,
      </if>
      <if test="qqAccessToken != null" >
        qqAccessToken,
      </if>
      <if test="origin != null" >
        origin,
      </if>
      <if test="staffId != null" >
        staffId,
      </if>
      <if test="userCode != null" >
        userCode,
      </if>
      <if test="referee != null" >
        referee,
      </if>
      <if test="usrId != null" >
        usrId,
      </if>
      <if test="sourceFlag != null" >
        sourceFlag,
      </if>
      <if test="inviterUserCode != null" >
        inviterUserCode,
      </if>
      <if test="differentIndustryId != null" >
        DifferentIndustryId,
      </if>
      <if test="updateFlag != null" >
        updateFlag,
      </if>
      <if test="openid != null" >
        openid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="idCardNo != null" >
        #{idCardNo,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="payPassword != null" >
        #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roles != null" >
        #{roles,jdbcType=SMALLINT},
      </if>
      <if test="cash != null" >
        #{cash,jdbcType=DECIMAL},
      </if>
      <if test="frozenWithDrawCash != null" >
        #{frozenWithDrawCash,jdbcType=DECIMAL},
      </if>
      <if test="frozenBiddingCash != null" >
        #{frozenBiddingCash,jdbcType=DECIMAL},
      </if>
      <if test="idVerifyLimit != null" >
        #{idVerifyLimit,jdbcType=SMALLINT},
      </if>
      <if test="portrait != null" >
        #{portrait,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="forbidStatus != null" >
        #{forbidStatus,jdbcType=SMALLINT},
      </if>
      <if test="albumCapacity != null" >
        #{albumCapacity,jdbcType=SMALLINT},
      </if>
      <if test="securityLevel != null" >
        #{securityLevel,jdbcType=SMALLINT},
      </if>
      <if test="weiboUId != null" >
        #{weiboUId,jdbcType=VARCHAR},
      </if>
      <if test="weiboAccessToken != null" >
        #{weiboAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="qqUId != null" >
        #{qqUId,jdbcType=VARCHAR},
      </if>
      <if test="qqAccessToken != null" >
        #{qqAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="origin != null" >
        #{origin,jdbcType=SMALLINT},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="userCode != null" >
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="referee != null" >
        #{referee,jdbcType=VARCHAR},
      </if>
      <if test="usrId != null" >
        #{usrId,jdbcType=VARCHAR},
      </if>
      <if test="sourceFlag != null" >
        #{sourceFlag,jdbcType=VARCHAR},
      </if>
      <if test="inviterUserCode != null" >
        #{inviterUserCode,jdbcType=VARCHAR},
      </if>
      <if test="differentIndustryId != null" >
        #{differentIndustryId,jdbcType=INTEGER},
      </if>
      <if test="updateFlag != null" >
        #{updateFlag,jdbcType=SMALLINT},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springmvc.model.UserMainExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 06 15:58:15 CST 2016.
    -->
    select count(*) from user_main
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 06 15:58:15 CST 2016.
    -->
    update user_main
    <set >
      <if test="record.userId != null" >
        userId = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null" >
        nickName = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null" >
        realName = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardNo != null" >
        idCardNo = #{record.idCardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.passwd != null" >
        passwd = #{record.passwd,jdbcType=VARCHAR},
      </if>
      <if test="record.payPassword != null" >
        payPassword = #{record.payPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.registerTime != null" >
        registerTime = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.roles != null" >
        roles = #{record.roles,jdbcType=SMALLINT},
      </if>
      <if test="record.cash != null" >
        cash = #{record.cash,jdbcType=DECIMAL},
      </if>
      <if test="record.frozenWithDrawCash != null" >
        frozenWithDrawCash = #{record.frozenWithDrawCash,jdbcType=DECIMAL},
      </if>
      <if test="record.frozenBiddingCash != null" >
        frozenBiddingCash = #{record.frozenBiddingCash,jdbcType=DECIMAL},
      </if>
      <if test="record.idVerifyLimit != null" >
        idVerifyLimit = #{record.idVerifyLimit,jdbcType=SMALLINT},
      </if>
      <if test="record.portrait != null" >
        portrait = #{record.portrait,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.forbidStatus != null" >
        forbidStatus = #{record.forbidStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.albumCapacity != null" >
        albumCapacity = #{record.albumCapacity,jdbcType=SMALLINT},
      </if>
      <if test="record.securityLevel != null" >
        securityLevel = #{record.securityLevel,jdbcType=SMALLINT},
      </if>
      <if test="record.weiboUId != null" >
        weiboUId = #{record.weiboUId,jdbcType=VARCHAR},
      </if>
      <if test="record.weiboAccessToken != null" >
        weiboAccessToken = #{record.weiboAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="record.qqUId != null" >
        qqUId = #{record.qqUId,jdbcType=VARCHAR},
      </if>
      <if test="record.qqAccessToken != null" >
        qqAccessToken = #{record.qqAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="record.origin != null" >
        origin = #{record.origin,jdbcType=SMALLINT},
      </if>
      <if test="record.staffId != null" >
        staffId = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.userCode != null" >
        userCode = #{record.userCode,jdbcType=VARCHAR},
      </if>
      <if test="record.referee != null" >
        referee = #{record.referee,jdbcType=VARCHAR},
      </if>
      <if test="record.usrId != null" >
        usrId = #{record.usrId,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceFlag != null" >
        sourceFlag = #{record.sourceFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.inviterUserCode != null" >
        inviterUserCode = #{record.inviterUserCode,jdbcType=VARCHAR},
      </if>
      <if test="record.differentIndustryId != null" >
        DifferentIndustryId = #{record.differentIndustryId,jdbcType=INTEGER},
      </if>
      <if test="record.updateFlag != null" >
        updateFlag = #{record.updateFlag,jdbcType=SMALLINT},
      </if>
      <if test="record.openid != null" >
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 06 15:58:15 CST 2016.
    -->
    update user_main
    set userId = #{record.userId,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      nickName = #{record.nickName,jdbcType=VARCHAR},
      realName = #{record.realName,jdbcType=VARCHAR},
      idCardNo = #{record.idCardNo,jdbcType=VARCHAR},
      passwd = #{record.passwd,jdbcType=VARCHAR},
      payPassword = #{record.payPassword,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      registerTime = #{record.registerTime,jdbcType=TIMESTAMP},
      roles = #{record.roles,jdbcType=SMALLINT},
      cash = #{record.cash,jdbcType=DECIMAL},
      frozenWithDrawCash = #{record.frozenWithDrawCash,jdbcType=DECIMAL},
      frozenBiddingCash = #{record.frozenBiddingCash,jdbcType=DECIMAL},
      idVerifyLimit = #{record.idVerifyLimit,jdbcType=SMALLINT},
      portrait = #{record.portrait,jdbcType=INTEGER},
      status = #{record.status,jdbcType=SMALLINT},
      forbidStatus = #{record.forbidStatus,jdbcType=SMALLINT},
      albumCapacity = #{record.albumCapacity,jdbcType=SMALLINT},
      securityLevel = #{record.securityLevel,jdbcType=SMALLINT},
      weiboUId = #{record.weiboUId,jdbcType=VARCHAR},
      weiboAccessToken = #{record.weiboAccessToken,jdbcType=VARCHAR},
      qqUId = #{record.qqUId,jdbcType=VARCHAR},
      qqAccessToken = #{record.qqAccessToken,jdbcType=VARCHAR},
      origin = #{record.origin,jdbcType=SMALLINT},
      staffId = #{record.staffId,jdbcType=INTEGER},
      userCode = #{record.userCode,jdbcType=VARCHAR},
      referee = #{record.referee,jdbcType=VARCHAR},
      usrId = #{record.usrId,jdbcType=VARCHAR},
      sourceFlag = #{record.sourceFlag,jdbcType=VARCHAR},
      inviterUserCode = #{record.inviterUserCode,jdbcType=VARCHAR},
      DifferentIndustryId = #{record.differentIndustryId,jdbcType=INTEGER},
      updateFlag = #{record.updateFlag,jdbcType=SMALLINT},
      openid = #{record.openid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.model.UserMain" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 06 15:58:15 CST 2016.
    -->
    update user_main
    <set >
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nickName = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        realName = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="idCardNo != null" >
        idCardNo = #{idCardNo,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="payPassword != null" >
        payPassword = #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        registerTime = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roles != null" >
        roles = #{roles,jdbcType=SMALLINT},
      </if>
      <if test="cash != null" >
        cash = #{cash,jdbcType=DECIMAL},
      </if>
      <if test="frozenWithDrawCash != null" >
        frozenWithDrawCash = #{frozenWithDrawCash,jdbcType=DECIMAL},
      </if>
      <if test="frozenBiddingCash != null" >
        frozenBiddingCash = #{frozenBiddingCash,jdbcType=DECIMAL},
      </if>
      <if test="idVerifyLimit != null" >
        idVerifyLimit = #{idVerifyLimit,jdbcType=SMALLINT},
      </if>
      <if test="portrait != null" >
        portrait = #{portrait,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="forbidStatus != null" >
        forbidStatus = #{forbidStatus,jdbcType=SMALLINT},
      </if>
      <if test="albumCapacity != null" >
        albumCapacity = #{albumCapacity,jdbcType=SMALLINT},
      </if>
      <if test="securityLevel != null" >
        securityLevel = #{securityLevel,jdbcType=SMALLINT},
      </if>
      <if test="weiboUId != null" >
        weiboUId = #{weiboUId,jdbcType=VARCHAR},
      </if>
      <if test="weiboAccessToken != null" >
        weiboAccessToken = #{weiboAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="qqUId != null" >
        qqUId = #{qqUId,jdbcType=VARCHAR},
      </if>
      <if test="qqAccessToken != null" >
        qqAccessToken = #{qqAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="origin != null" >
        origin = #{origin,jdbcType=SMALLINT},
      </if>
      <if test="staffId != null" >
        staffId = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="userCode != null" >
        userCode = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="referee != null" >
        referee = #{referee,jdbcType=VARCHAR},
      </if>
      <if test="usrId != null" >
        usrId = #{usrId,jdbcType=VARCHAR},
      </if>
      <if test="sourceFlag != null" >
        sourceFlag = #{sourceFlag,jdbcType=VARCHAR},
      </if>
      <if test="inviterUserCode != null" >
        inviterUserCode = #{inviterUserCode,jdbcType=VARCHAR},
      </if>
      <if test="differentIndustryId != null" >
        DifferentIndustryId = #{differentIndustryId,jdbcType=INTEGER},
      </if>
      <if test="updateFlag != null" >
        updateFlag = #{updateFlag,jdbcType=SMALLINT},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.model.UserMain" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 06 15:58:15 CST 2016.
    -->
    update user_main
    set email = #{email,jdbcType=VARCHAR},
      nickName = #{nickName,jdbcType=VARCHAR},
      realName = #{realName,jdbcType=VARCHAR},
      idCardNo = #{idCardNo,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      payPassword = #{payPassword,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      registerTime = #{registerTime,jdbcType=TIMESTAMP},
      roles = #{roles,jdbcType=SMALLINT},
      cash = #{cash,jdbcType=DECIMAL},
      frozenWithDrawCash = #{frozenWithDrawCash,jdbcType=DECIMAL},
      frozenBiddingCash = #{frozenBiddingCash,jdbcType=DECIMAL},
      idVerifyLimit = #{idVerifyLimit,jdbcType=SMALLINT},
      portrait = #{portrait,jdbcType=INTEGER},
      status = #{status,jdbcType=SMALLINT},
      forbidStatus = #{forbidStatus,jdbcType=SMALLINT},
      albumCapacity = #{albumCapacity,jdbcType=SMALLINT},
      securityLevel = #{securityLevel,jdbcType=SMALLINT},
      weiboUId = #{weiboUId,jdbcType=VARCHAR},
      weiboAccessToken = #{weiboAccessToken,jdbcType=VARCHAR},
      qqUId = #{qqUId,jdbcType=VARCHAR},
      qqAccessToken = #{qqAccessToken,jdbcType=VARCHAR},
      origin = #{origin,jdbcType=SMALLINT},
      staffId = #{staffId,jdbcType=INTEGER},
      userCode = #{userCode,jdbcType=VARCHAR},
      referee = #{referee,jdbcType=VARCHAR},
      usrId = #{usrId,jdbcType=VARCHAR},
      sourceFlag = #{sourceFlag,jdbcType=VARCHAR},
      inviterUserCode = #{inviterUserCode,jdbcType=VARCHAR},
      DifferentIndustryId = #{differentIndustryId,jdbcType=INTEGER},
      updateFlag = #{updateFlag,jdbcType=SMALLINT},
      openid = #{openid,jdbcType=VARCHAR}
    where userId = #{userId,jdbcType=INTEGER}
  </update>
  <select id="getUserRed" resultType="java.util.HashMap" >
    SELECT t.*,r.activityId,r.activityName aaName FROM user_main t,user_red r WHERE t.userId=r.userId AND t.roles=1 AND t.userCode IS NOT NULL AND t.userId = #{userId,jdbcType=INTEGER}
  </select>
</mapper>